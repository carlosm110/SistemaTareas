// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace SistemaTareas.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaTareas.model.AsignacionProyecto", b =>
                {
                    b.Property<int>("AsignacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AsignacionId"));

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("integer");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("AsignacionId");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AsignacionesProyectos");
                });

            modelBuilder.Entity("SistemaTareas.model.ComentarioTarea", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ComentarioId"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TareaId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("ComentarioId");

                    b.HasIndex("TareaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ComentariosTareas");
                });

            modelBuilder.Entity("SistemaTareas.model.HistorialTarea", b =>
                {
                    b.Property<int>("HistorialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HistorialId"));

                    b.Property<int?>("CambiadoPorId")
                        .HasColumnType("integer");

                    b.Property<string>("CampoModificado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TareaId")
                        .HasColumnType("integer");

                    b.Property<string>("ValorAnterior")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorNuevo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("HistorialId");

                    b.HasIndex("CambiadoPorId");

                    b.HasIndex("TareaId");

                    b.ToTable("HistorialTareas");
                });

            modelBuilder.Entity("SistemaTareas.model.Proyecto", b =>
                {
                    b.Property<int>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProyectoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("ProyectoId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("SistemaTareas.model.Tarea", b =>
                {
                    b.Property<int>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TareaId"));

                    b.Property<int?>("AsignadoAId")
                        .HasColumnType("integer");

                    b.Property<int?>("CreadoPorId")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Prioridad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("TareaId");

                    b.HasIndex("AsignadoAId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("SistemaTareas.model.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("ContrasenaHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SistemaTareas.model.AsignacionProyecto", b =>
                {
                    b.HasOne("SistemaTareas.model.Proyecto", "Proyecto")
                        .WithMany("AsignacionesProyectos")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaTareas.model.Usuario", "Usuario")
                        .WithMany("AsignacionesProyectos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaTareas.model.ComentarioTarea", b =>
                {
                    b.HasOne("SistemaTareas.model.Tarea", "Tarea")
                        .WithMany("Comentarios")
                        .HasForeignKey("TareaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaTareas.model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarea");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaTareas.model.HistorialTarea", b =>
                {
                    b.HasOne("SistemaTareas.model.Usuario", "CambiadoPor")
                        .WithMany()
                        .HasForeignKey("CambiadoPorId");

                    b.HasOne("SistemaTareas.model.Tarea", "Tarea")
                        .WithMany("Historial")
                        .HasForeignKey("TareaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CambiadoPor");

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("SistemaTareas.model.Tarea", b =>
                {
                    b.HasOne("SistemaTareas.model.Usuario", "AsignadoA")
                        .WithMany("TareasAsignadas")
                        .HasForeignKey("AsignadoAId");

                    b.HasOne("SistemaTareas.model.Usuario", "CreadoPor")
                        .WithMany("TareasCreadas")
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("SistemaTareas.model.Proyecto", "Proyecto")
                        .WithMany("Tareas")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AsignadoA");

                    b.Navigation("CreadoPor");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("SistemaTareas.model.Proyecto", b =>
                {
                    b.Navigation("AsignacionesProyectos");

                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("SistemaTareas.model.Tarea", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Historial");
                });

            modelBuilder.Entity("SistemaTareas.model.Usuario", b =>
                {
                    b.Navigation("AsignacionesProyectos");

                    b.Navigation("TareasAsignadas");

                    b.Navigation("TareasCreadas");
                });
#pragma warning restore 612, 618
        }
    }
}
